scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=1 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/product-lines/email_spec27_product25.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/product-lines/email_spec27_product25.cil.c" (CPAchecker.parse, INFO)

line 242: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 529: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 621: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 699: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 985: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1079: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1467: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1561: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1612: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1822: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1859: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1896: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1970: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2942: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2421: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Starting assertions check... (AbstractBMCAlgorithm.checkBoundingAssertions, INFO)

Terminating because none of the following CPAs' precision can be adjusted any further  LoopBoundCPA (AbstractBMCAlgorithm.adjustConditions, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)


PredicateCPA statistics
-----------------------
Number of abstractions:            0 (0% of all post computations)
Number of strengthen sat checks:   0
Number of coverage checks:         20
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       0
Avg ABE block size:                                0.00 (sum: 0, count: 0, min: 0, max: 0)
Number of predicates discovered:          0

Time for post operator:                                0.402s
  Time for path formula creation:                      0.398s
Time for strengthen operator:                          0.017s
Time for prec operator:                                0.006s
Time for merge operator:                               0.032s
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           1
Maximum loop iteration reached:                    2


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     108.07 (sum: 116828, count: 1081, min: 0, max: 156)
Number of global variables per state:              90.35 (sum: 97669, count: 1081, min: 0, max: 102)
Number of assumptions:                                  554
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    1090
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.049s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 1090, count: 1090, min: 1, max: 1) [1 x 1090]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            1081
Max size of waitlist:            3
Average size of waitlist:        1
LoopstackSortedWaitlist:                           0.09 (sum: 89, count: 992, min: 0, max: 89)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 997, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.08 (sum: 84, count: 992, min: 0, max: 84)
CallstackSortedWaitlist:                           89.00 (sum: 89, count: 1, min: 89, max: 89)
Number of computed successors:   1090
Max successors for one state:    2
Number of times merged:          10
Number of times stopped:         10
Number of times breaked:         0

Total time for CPA algorithm:         0.856s (Max:     0.856s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      0.111s
  Time for transfer relation:         0.607s
  Time for merge operator:            0.044s
  Time for stop operator:             0.013s
  Time for adding to reached set:     0.033s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.858s
Time for final sat check:                            0.166s
Time for bounding assertions check:                  1.997s

CPAchecker general statistics
-----------------------------
Number of program locations:                       1951
Number of CFA edges (per node):                        2206 (count: 1951, min: 0, max: 6, avg: 1.13)
Number of relevant variables:                      397
Number of functions:                               112
Number of loops (and loop nodes):                         4 (sum: 152, min: 15, max: 102, avg: 38.00)
Size of reached set:             1081
  Number of reached locations:   860 (44%)
    Avg states per location:     1
    Max states per location:     6 (at node N728)
  Number of reached functions:   64 (57%)
  Number of partitions:          1081
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.813s
  Time for loading CPAs:          1.349s
  Time for loading parser:        0.206s
  Time for CFA construction:      1.193s
    Time for parsing file(s):     0.470s
    Time for AST to CFA:          0.403s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.237s
    Time for loop structure:      0.012s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.004s
        Function calls via function pointers:             1 (count: 1, min: 1, max: 1, avg: 1.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.166s
        Time for collecting variables:                 0.097s
        Time for solving dependencies:                 0.002s
        Time for building hierarchy:                   0.001s
        Time for building classification:              0.066s
        Time for exporting data:                       0.000s
Time for Analysis:                3.422s
CPU time for analysis:            5.900s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.236s
Total CPU time for CPAchecker:   11.360s
Time for statistics:              0.081s

Time for Garbage Collector:       0.145s (in 10 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
