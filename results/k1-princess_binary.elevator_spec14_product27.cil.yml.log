scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=1 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/product-lines/elevator_spec14_product27.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/product-lines/elevator_spec14_product27.cil.c" (CPAchecker.parse, INFO)

line 150: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 323: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 366: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 508: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 979: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1010: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1024: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1597: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1972: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2383: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2429: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2464: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2593: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2220: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Starting assertions check... (AbstractBMCAlgorithm.checkBoundingAssertions, INFO)

Terminating because none of the following CPAs' precision can be adjusted any further  LoopBoundCPA (AbstractBMCAlgorithm.adjustConditions, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)


PredicateCPA statistics
-----------------------
Number of abstractions:            0 (0% of all post computations)
Number of strengthen sat checks:   0
Number of coverage checks:         0
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       0
Avg ABE block size:                                0.00 (sum: 0, count: 0, min: 0, max: 0)
Number of predicates discovered:          0

Time for post operator:                                0.391s
  Time for path formula creation:                      0.384s
Time for strengthen operator:                          0.020s
Time for prec operator:                                0.018s
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           1
Maximum loop iteration reached:                    2


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     54.79 (sum: 71719, count: 1309, min: 0, max: 68)
Number of global variables per state:              49.97 (sum: 65413, count: 1309, min: 0, max: 54)
Number of assumptions:                                 1168
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    1308
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.033s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 1308, count: 1308, min: 1, max: 1) [1 x 1308]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            1309
Max size of waitlist:            1
Average size of waitlist:        1
LoopstackSortedWaitlist:                           0.00 (sum: 0, count: 1309, min: 0, max: 0)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 1309, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.00 (sum: 0, count: 1309, min: 0, max: 0)
CallstackSortedWaitlist:                           0.00 (sum: 0, count: 1, min: 0, max: 0)
Number of computed successors:   1308
Max successors for one state:    1
Number of times merged:          0
Number of times stopped:         0
Number of times breaked:         0

Total time for CPA algorithm:         0.742s (Max:     0.742s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      0.099s
  Time for transfer relation:         0.584s
  Time for stop operator:             0.005s
  Time for adding to reached set:     0.023s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.744s
Time for final sat check:                            0.171s
Time for bounding assertions check:                  1.912s

CPAchecker general statistics
-----------------------------
Number of program locations:                       2178
Number of CFA edges (per node):                        2639 (count: 2178, min: 0, max: 22, avg: 1.21)
Number of relevant variables:                      324
Number of functions:                               74
Number of loops (and loop nodes):                         9 (sum: 175, min: 11, max: 37, avg: 19.44)
Size of reached set:             1309
  Number of reached locations:   648 (30%)
    Avg states per location:     2
    Max states per location:     24 (at node N2057)
  Number of reached functions:   41 (55%)
  Number of partitions:          1309
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.889s
  Time for loading CPAs:          1.365s
  Time for loading parser:        0.243s
  Time for CFA construction:      1.214s
    Time for parsing file(s):     0.496s
    Time for AST to CFA:          0.388s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.241s
    Time for loop structure:      0.015s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.006s
        Function calls via function pointers:             1 (count: 1, min: 1, max: 1, avg: 1.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.168s
        Time for collecting variables:                 0.082s
        Time for solving dependencies:                 0.002s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.084s
        Time for exporting data:                       0.000s
Time for Analysis:                3.587s
CPU time for analysis:            5.700s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.476s
Total CPU time for CPAchecker:   11.340s
Time for statistics:              0.045s

Time for Garbage Collector:       0.102s (in 10 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
