scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=10 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/nla-digbench/ps4-ll.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/nla-digbench/ps4-ll.c" (CPAchecker.parse, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Error found, creating error path (AbstractBMCAlgorithm.analyzeCounterexample0, INFO)

{__VERIFIER_assert::cond@3 -> 0, __VERIFIER_assert::cond@2 -> 1, main::c@3 -> 0, main::x@3 -> 0, main::y@3 -> 0, main::k@3 -> -1, __VERIFIER_nondet_short!2@ -> -1, Integer_*_(3, 0) -> -5, Integer_*_(2, 0) -> 3, Integer_*_(-1, 0) -> 4, Integer_*_(0, 0) -> 2, abbrev_20_def -> false, abbrev_20 -> false, abbrev_18_def -> false, abbrev_18 -> false, abbrev_16_def -> false, abbrev_16 -> false, abbrev_14_def -> false, abbrev_14 -> false}
{main::x@3 -> 0, main::c@3 -> 0, __VERIFIER_assert::cond@4 -> 0, __VERIFIER_assert::cond@2 -> 1, main::y@3 -> 0, main::k@3 -> -1, __VERIFIER_nondet_short!2@ -> -1, Integer_*_(3, 0) -> -5, Integer_*_(2, 0) -> 3, Integer_*_(-1, 0) -> 4, Integer_*_(0, 0) -> 2}
[main::x@3: 0, main::c@3: 0, __VERIFIER_assert::cond@4: 0, __VERIFIER_assert::cond@2: 1, main::y@3: 0, main::k@3: -1, __VERIFIER_nondet_short!2@: -1, Integer_*_(3, 0): -5, Integer_*_(2, 0): 3, Integer_*_(-1, 0): 4, Integer_*_(0, 0): 2]
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)


PredicateCPA statistics
-----------------------
Number of abstractions:            10 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (100%)
  Times precision was empty:       10 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         0
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Avg ABE block size:                                40.00 (sum: 400, count: 10, min: 13, max: 67)
Number of predicates discovered:          0

Time for post operator:                                0.122s
  Time for path formula creation:                      0.120s
Time for strengthen operator:                          0.006s
Time for prec operator:                                0.006s
  Time for abstraction:                  0.000s (Max:     0.000s, Count: 10)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           10
Maximum loop iteration reached:                    11


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     3.08 (sum: 889, count: 289, min: 0, max: 4)
Number of global variables per state:              0.00 (sum: 0, count: 289, min: 0, max: 0)
Number of assumptions:                                  120
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     288
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.005s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     0.97 (sum: 288, count: 298, min: 0, max: 1) [0 x 10, 1 x 288]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            289
Max size of waitlist:            3
Average size of waitlist:        1
LoopstackSortedWaitlist:                           0.32 (sum: 70, count: 219, min: 0, max: 5)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 219, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.32 (sum: 70, count: 219, min: 0, max: 5)
CallstackSortedWaitlist:                           70.00 (sum: 70, count: 1, min: 70, max: 70)
Number of computed successors:   288
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         0
Number of times breaked:         0

Total time for CPA algorithm:         0.292s (Max:     0.292s)
  Time for choose from waitlist:      0.008s
  Time for precision adjustment:      0.036s
  Time for transfer relation:         0.227s
  Time for stop operator:             0.004s
  Time for adding to reached set:     0.012s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.294s
Time for final sat check:                            1.027s
Time for error-path creation:                        0.112s
Time for error-path post-processing:                 0.195s

CPAchecker general statistics
-----------------------------
Number of program locations:                       49
Number of CFA edges (per node):                          46 (count: 49, min: 0, max: 3, avg: 0.94)
Number of relevant variables:                      6
Number of functions:                               4
Number of loops (and loop nodes):                         1 (sum: 7, min: 7, max: 7, avg: 7.00)
Size of reached set:             289
  Number of reached locations:   37 (76%)
    Avg states per location:     7
    Max states per location:     30 (at node N10)
  Number of reached functions:   3 (75%)
  Number of partitions:          289
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       10

Time for analysis setup:          1.942s
  Time for loading CPAs:          1.091s
  Time for loading parser:        0.206s
  Time for CFA construction:      0.555s
    Time for parsing file(s):     0.331s
    Time for AST to CFA:          0.097s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.083s
    Time for loop structure:      0.004s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.003s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.049s
        Time for collecting variables:                 0.029s
        Time for solving dependencies:                 0.000s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.020s
        Time for exporting data:                       0.000s
Time for Analysis:                1.707s
CPU time for analysis:            3.330s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.650s
Total CPU time for CPAchecker:    7.080s
Time for statistics:              0.041s

Time for Garbage Collector:       0.089s (in 8 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: FALSE. Property violation (unreach-call: reach_error(); called in line 12) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
