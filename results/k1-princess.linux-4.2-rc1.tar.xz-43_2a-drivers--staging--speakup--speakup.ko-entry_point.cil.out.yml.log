scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=1 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -64 test/programs/benchmarks/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--staging--speakup--speakup.ko-entry_point.cil.out.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--staging--speakup--speakup.ko-entry_point.cil.out.i" (CPAchecker.parse, INFO)

lines 4786-4787: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (dev_opened): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4790-4791: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (dev_opened): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4798-4799: Dead code detected: __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (dev_opened): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

line 4801: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (dev_opened): : "memory",
                       "cc");
  goto ldv_30420;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (dev_opened): : "memory",
                       "cc");
  goto ldv_30420;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (dev_opened): : "memory",
                       "cc");
  goto ldv_30420;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (dev_opened): : "memory",
                       "cc");
  goto ldv_30420;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5521: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5521: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5522: Dead code detected: __asm__ ("incb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5524: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5524: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5525: Dead code detected: __asm__ ("decb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5527: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5531: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5531: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5532: Dead code detected: __asm__ ("incw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5534: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5534: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5535: Dead code detected: __asm__ ("decw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5537: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5551: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5551: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5552: Dead code detected: __asm__ ("incq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5554: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5554: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5555: Dead code detected: __asm__ ("decq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5557: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5560: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (val));
  }
  goto ldv_6163;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6163;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6163;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (val));
  }
  goto ldv_6163;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5574: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5574: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5575: Dead code detected: __asm__ ("incb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5577: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5577: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5578: Dead code detected: __asm__ ("decb %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5580: Dead code detected: __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5584: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5584: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5585: Dead code detected: __asm__ ("incw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5587: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5587: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5588: Dead code detected: __asm__ ("decw %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5590: Dead code detected: __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5604: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5604: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5605: Dead code detected: __asm__ ("incq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5607: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5607: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5608: Dead code detected: __asm__ ("decq %%gs:%0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5610: Dead code detected: __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5613: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%0": "+m" (__preempt_count): "qi" (- val));
  }
  goto ldv_6175;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6175;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6175;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%0": "+m" (__preempt_count): "re" (- val));
  }
  goto ldv_6175;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5701: Dead code detected: __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5704: Dead code detected: __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5707: Dead code detected: __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5709: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_30952;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30952;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30952;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_30952;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5715: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5720: Dead code detected: __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5723: Dead code detected: __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5726: Dead code detected: __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5728: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_30962;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30962;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30962;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_30962;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5734: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5739: Dead code detected: __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5742: Dead code detected: __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5745: Dead code detected: __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5747: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_30971;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30971;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30971;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_30971;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5753: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5758: Dead code detected: __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5761: Dead code detected: __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5764: Dead code detected: __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5766: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_30980;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30980;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30980;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_30980;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5771: Dead code detected: switch (1UL) {
  case 1UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_30952;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30952;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30952;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_30952;
  default:
  __bad_percpu_size();
  }
  ldv_30952: ;
  goto ldv_30957;
  case 2UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_30962;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30962;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30962;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_30962;
  default:
  __bad_percpu_size();
  }
  ldv_30962: ;
  goto ldv_30957;
  case 4UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_30971;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30971;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30971;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_30971;
  default:
  __bad_percpu_size();
  }
  ldv_30971: ;
  goto ldv_30957;
  case 8UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_30980;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30980;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_30980;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_30980;
  default:
  __bad_percpu_size();
  }
  ldv_30980: ;
  goto ldv_30957;
  default:
  __bad_size_call_parameter();
  goto ldv_30957;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5787: Dead code detected: __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5790: Dead code detected: __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5793: Dead code detected: __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5795: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_30991;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_30991;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_30991;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_30991;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5801: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5806: Dead code detected: __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5809: Dead code detected: __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5812: Dead code detected: __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5814: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_31001;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31001;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31001;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_31001;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5820: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5825: Dead code detected: __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5828: Dead code detected: __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5831: Dead code detected: __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5833: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_31010;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31010;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31010;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_31010;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5839: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5844: Dead code detected: __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5847: Dead code detected: __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5850: Dead code detected: __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5852: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_31019;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31019;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31019;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_31019;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5857: Dead code detected: switch (1UL) {
  case 1UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_30991;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_30991;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_30991;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_30991;
  default:
  __bad_percpu_size();
  }
  ldv_30991: ;
  goto ldv_30996;
  case 2UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_31001;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31001;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31001;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_31001;
  default:
  __bad_percpu_size();
  }
  ldv_31001: ;
  goto ldv_30996;
  case 4UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_31010;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31010;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31010;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_31010;
  default:
  __bad_percpu_size();
  }
  ldv_31010: ;
  goto ldv_30996;
  case 8UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_31019;
  case 2UL:
  __asm__ ("movw %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31019;
  case 4UL:
  __asm__ ("movl %1,%%gs:%0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_31019;
  case 8UL:
  __asm__ ("movq %1,%%gs:%0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_31019;
  default:
  __bad_percpu_size();
  }
  ldv_31019: ;
  goto ldv_30996;
  default:
  __bad_size_call_parameter();
  goto ldv_30996;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5892: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5895: Dead code detected: __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5898: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5900: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_31043;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_31043;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_31043;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_31043;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5907: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5912: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5915: Dead code detected: __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5918: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5920: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_31053;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_31053;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_31053;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_31053;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5927: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5932: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5935: Dead code detected: __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5938: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5940: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_31062;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_31062;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_31062;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_31062;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5947: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5952: Dead code detected: __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5955: Dead code detected: __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5958: Dead code detected: __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5960: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_31071;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_31071;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_31071;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_31071;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5966: Dead code detected: switch (1UL) {
  case 1UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_31043;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_31043;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_31043;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_31043;
  default:
  __bad_percpu_size();
  }
  ldv_31043:
  pscr_ret__ = pfo_ret__;
  goto ldv_31049;
  case 2UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_31053;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_31053;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_31053;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_31053;
  default:
  __bad_percpu_size();
  }
  ldv_31053:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_31049;
  case 4UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_31062;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_31062;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_31062;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_31062;
  default:
  __bad_percpu_size();
  }
  ldv_31062:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_31049;
  case 8UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%1,%0": "=q" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_31071;
  case 2UL:
  __asm__ ("movw %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_31071;
  case 4UL:
  __asm__ ("movl %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_31071;
  case 8UL:
  __asm__ ("movq %%gs:%1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_31071;
  default:
  __bad_percpu_size();
  }
  ldv_31071:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_31049;
  default:
  __bad_size_call_parameter();
  goto ldv_31049;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9159: Dereferencing of non-pointer type spkup_hand  in expression *(spkup_handler[(int )value]) (ASTConverter.convert, WARNING)

line 13377: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13380: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13383: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 13388: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3233;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 13404-13405: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 13408-13409: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 13416-13417: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

line 13419: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5763;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 13700-13701: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (spw->tty): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 13704-13705: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (spw->tty): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 13708-13709: Dead code detected: __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (spw->tty): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

line 13715: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (spw->tty): : "memory",
                       "cc");
  goto ldv_31915;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (spw->tty): : "memory",
                       "cc");
  goto ldv_31915;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (spw->tty): : "memory",
                       "cc");
  goto ldv_31915;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (spw->tty): : "memory",
                       "cc");
  goto ldv_31915;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13738: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 13743: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 13748: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 13757: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___1 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___0), "+m" (tmp___1->state): : "memory",
                       "cc");
  goto ldv_31928;
  case 2UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___0), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_31928;
  case 4UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___0), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_31928;
  case 8UL:
  tmp___4 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___0), "+m" (tmp___4->state): : "memory",
                       "cc");
  goto ldv_31928;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13804: Dead code detected: __ptr = (u8 volatile *)(& speakup_paste_work.tty); (CFACreationUtils.addEdgeToCFA, INFO)

line 13809: Dead code detected: __ptr___0 = (u16 volatile *)(& speakup_paste_work.tty); (CFACreationUtils.addEdgeToCFA, INFO)

line 13814: Dead code detected: __ptr___1 = (u32 volatile *)(& speakup_paste_work.tty); (CFACreationUtils.addEdgeToCFA, INFO)

line 13823: Dead code detected: switch (8UL) {
  case 1UL:
  __ptr = (u8 volatile *)(& speakup_paste_work.tty);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgb %2,%1": "=a" (__ret),
                       "+m" (*__ptr): "q" (__new), "0" (__old): "memory");
  goto ldv_31946;
  case 2UL:
  __ptr___0 = (u16 volatile *)(& speakup_paste_work.tty);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgw %2,%1": "=a" (__ret),
                       "+m" (*__ptr___0): "r" (__new), "0" (__old): "memory");
  goto ldv_31946;
  case 4UL:
  __ptr___1 = (u32 volatile *)(& speakup_paste_work.tty);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgl %2,%1": "=a" (__ret),
                       "+m" (*__ptr___1): "r" (__new), "0" (__old): "memory");
  goto ldv_31946;
  case 8UL:
  __ptr___2 = (u64 volatile *)(& speakup_paste_work.tty);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgq %2,%1": "=a" (__ret),
                       "+m" (*__ptr___2): "r" (__new), "0" (__old): "memory");
  goto ldv_31946;
  default:
  __cmpxchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 14008: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 14447: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 14548: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14553: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14558: Dead code detected: tmp___4 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14567: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_32019;
  case 2UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_32019;
  case 4UL:
  tmp___4 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___4->state): : "memory",
                       "cc");
  goto ldv_32019;
  case 8UL:
  tmp___5 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___5->state): : "memory",
                       "cc");
  goto ldv_32019;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 14606: Dead code detected: tmp___12 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14611: Dead code detected: tmp___13 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14616: Dead code detected: tmp___14 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14625: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___12 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___0), "+m" (tmp___12->state): : "memory",
                       "cc");
  goto ldv_32033;
  case 2UL:
  tmp___13 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___0), "+m" (tmp___13->state): : "memory",
                       "cc");
  goto ldv_32033;
  case 4UL:
  tmp___14 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___0), "+m" (tmp___14->state): : "memory",
                       "cc");
  goto ldv_32033;
  case 8UL:
  tmp___15 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___0), "+m" (tmp___15->state): : "memory",
                       "cc");
  goto ldv_32033;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 14038: Function pointer *(synth->read_buff_add) with type void (*)(u_char ) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

line 13504: Function pointer *(ld->ops->receive_buf) with type void (*)(struct tty_struct *, const unsigned char *, char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

line 13498: Function pointer *(ld->ops->receive_buf2) with type int (*)(struct tty_struct *, const unsigned char *, char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (TargetLocationProvider:CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Recursion detected. Defaulting to selecting all locations as potential target locations. (TargetLocationProvider:TargetLocationProviderImpl.tryGetAutomatonTargetLocations, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Exception in thread "main" org.sosy_lab.java_smt.basicimpl.GeneratorException: Modular Congruence is not available in SMTLIB2. 
	at org.sosy_lab.java_smt.basicimpl.AbstractNumeralFormulaManager.modularCongruence(AbstractNumeralFormulaManager.java:361)
	at org.sosy_lab.java_smt.solvers.princess.PrincessIntegerFormulaManager.modularCongruence(PrincessIntegerFormulaManager.java:22)
	at org.sosy_lab.cpachecker.util.predicates.smt.IntegerFormulaManagerView.modularCongruence(IntegerFormulaManagerView.java:35)
	at org.sosy_lab.cpachecker.util.predicates.smt.FormulaManagerView.makeModularCongruence(FormulaManagerView.java:688)
	at org.sosy_lab.cpachecker.util.predicates.smt.FormulaManagerView.makeModularCongruence(FormulaManagerView.java:670)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.PointerTargetSetManager.makeBaseAddressConstraints(PointerTargetSetManager.java:653)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.PointerTargetSetBuilder$RealPointerTargetSetBuilder.addNextBaseAddressConstraints(PointerTargetSetBuilder.java:286)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.CToFormulaConverterWithPointerAliasing.declareSharedBase(CToFormulaConverterWithPointerAliasing.java:437)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.CToFormulaConverterWithPointerAliasing.makeDeclaration(CToFormulaConverterWithPointerAliasing.java:1001)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.ctoformula.CtoFormulaConverter.createFormulaForEdge(CtoFormulaConverter.java:1231)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.ctoformula.CtoFormulaConverter.makeAnd(CtoFormulaConverter.java:1049)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.PathFormulaManagerImpl.makeAnd(PathFormulaManagerImpl.java:246)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.PathFormulaManagerImpl.makeAnd(PathFormulaManagerImpl.java:300)
	at org.sosy_lab.cpachecker.cpa.predicate.PredicateTransferRelation.convertEdgeToPathFormula(PredicateTransferRelation.java:203)
	at org.sosy_lab.cpachecker.cpa.predicate.PredicateTransferRelation.getAbstractSuccessorsForEdge(PredicateTransferRelation.java:113)
	at org.sosy_lab.cpachecker.cpa.composite.CompositeTransferRelation.callTransferRelation(CompositeTransferRelation.java:297)
	at org.sosy_lab.cpachecker.cpa.composite.CompositeTransferRelation.getAbstractSuccessorForSimpleEdge(CompositeTransferRelation.java:264)
	at org.sosy_lab.cpachecker.cpa.composite.CompositeTransferRelation.getAbstractSuccessorForEdge(CompositeTransferRelation.java:196)
	at org.sosy_lab.cpachecker.cpa.composite.CompositeTransferRelation.getAbstractSuccessors(CompositeTransferRelation.java:88)
	at org.sosy_lab.cpachecker.cpa.arg.ARGTransferRelation.getAbstractSuccessors(ARGTransferRelation.java:45)
	at org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm.handleState(CPAAlgorithm.java:334)
	at org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm.run0(CPAAlgorithm.java:289)
	at org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm.run(CPAAlgorithm.java:260)
	at org.sosy_lab.cpachecker.core.algorithm.bmc.BMCHelper.unroll(BMCHelper.java:192)
	at org.sosy_lab.cpachecker.core.algorithm.bmc.AbstractBMCAlgorithm.run(AbstractBMCAlgorithm.java:427)
	at org.sosy_lab.cpachecker.core.algorithm.bmc.BMCAlgorithm.run(BMCAlgorithm.java:130)
	at org.sosy_lab.cpachecker.core.CPAchecker.runAlgorithm(CPAchecker.java:507)
	at org.sosy_lab.cpachecker.core.CPAchecker.run(CPAchecker.java:369)
	at org.sosy_lab.cpachecker.cmdline.CPAMain.main(CPAMain.java:170)
