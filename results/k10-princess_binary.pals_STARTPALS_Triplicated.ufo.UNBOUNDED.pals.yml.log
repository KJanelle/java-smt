scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=10 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/seq-mthreaded/pals_STARTPALS_Triplicated.ufo.UNBOUNDED.pals.c" (CPAchecker.parse, INFO)

line 532: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Starting assertions check... (AbstractBMCAlgorithm.checkBoundingAssertions, INFO)

Terminating because none of the following CPAs' precision can be adjusted any further  LoopBoundCPA (AbstractBMCAlgorithm.adjustConditions, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)


PredicateCPA statistics
-----------------------
Number of abstractions:            0 (0% of all post computations)
Number of strengthen sat checks:   0
Number of coverage checks:         0
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       0
Avg ABE block size:                                0.00 (sum: 0, count: 0, min: 0, max: 0)
Number of predicates discovered:          0

Time for post operator:                                0.176s
  Time for path formula creation:                      0.174s
Time for strengthen operator:                          0.009s
Time for prec operator:                                0.002s
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           10
Maximum loop iteration reached:                    11


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     15.81 (sum: 5440, count: 344, min: 0, max: 29)
Number of global variables per state:              11.32 (sum: 3893, count: 344, min: 0, max: 28)
Number of assumptions:                                  280
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     343
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.018s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     0.98 (sum: 343, count: 351, min: 0, max: 1) [0 x 8, 1 x 343]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            344
Max size of waitlist:            9
Average size of waitlist:        4
LoopstackSortedWaitlist:                           0.17 (sum: 49, count: 295, min: 0, max: 9)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 323, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.07 (sum: 21, count: 295, min: 0, max: 3)
CallstackSortedWaitlist:                           49.00 (sum: 49, count: 1, min: 49, max: 49)
Number of computed successors:   343
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         0
Number of times breaked:         0

Total time for CPA algorithm:         0.363s (Max:     0.363s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      0.052s
  Time for transfer relation:         0.276s
  Time for stop operator:             0.006s
  Time for adding to reached set:     0.013s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.365s
Time for final sat check:                            0.139s
Time for bounding assertions check:                  0.288s

CPAchecker general statistics
-----------------------------
Number of program locations:                       491
Number of CFA edges (per node):                         595 (count: 491, min: 0, max: 10, avg: 1.21)
Number of relevant variables:                      88
Number of functions:                               15
Number of loops (and loop nodes):                         2 (sum: 44, min: 14, max: 30, avg: 22.00)
Size of reached set:             344
  Number of reached locations:   147 (30%)
    Avg states per location:     2
    Max states per location:     11 (at node N23)
  Number of reached functions:   5 (33%)
  Number of partitions:          344
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.235s
  Time for loading CPAs:          1.198s
  Time for loading parser:        0.245s
  Time for CFA construction:      0.736s
    Time for parsing file(s):     0.326s
    Time for AST to CFA:          0.229s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.127s
    Time for loop structure:      0.007s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.002s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.084s
        Time for collecting variables:                 0.053s
        Time for solving dependencies:                 0.001s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.030s
        Time for exporting data:                       0.000s
Time for Analysis:                1.056s
CPU time for analysis:            2.060s
Time for analyzing result:        0.001s
Total time for CPAchecker:        3.292s
Total CPU time for CPAchecker:    6.310s
Time for statistics:              0.043s

Time for Garbage Collector:       0.047s (in 7 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
