scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=10 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/product-lines/email_spec7_product18.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/product-lines/email_spec7_product18.cil.c" (CPAchecker.parse, INFO)

line 63: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 383: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 429: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 523: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 552: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 770: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 973: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1056: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1103: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1150: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1596: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1691: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1806: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2346: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2370: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2482: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2523: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2557: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 220: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Starting assertions check... (AbstractBMCAlgorithm.checkBoundingAssertions, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)


PredicateCPA statistics
-----------------------
Number of abstractions:            0 (0% of all post computations)
Number of strengthen sat checks:   0
Number of coverage checks:         608
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       0
Avg ABE block size:                                0.00 (sum: 0, count: 0, min: 0, max: 0)
Number of predicates discovered:          0

Time for post operator:                                0.761s
  Time for path formula creation:                      0.747s
Time for strengthen operator:                          0.026s
Time for prec operator:                                0.019s
Time for merge operator:                               0.093s
Time for coverage checks:                              0.001s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           10
Maximum loop iteration reached:                    5


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     96.43 (sum: 461055, count: 4781, min: 0, max: 149)
Number of global variables per state:              86.95 (sum: 415698, count: 4781, min: 0, max: 102)
Number of assumptions:                                 2316
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    5084
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.088s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 5084, count: 5084, min: 1, max: 1) [1 x 5084]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            4781
Max size of waitlist:            12
Average size of waitlist:        5
LoopstackSortedWaitlist:                           0.12 (sum: 403, count: 3500, min: 0, max: 101)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 3529, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.11 (sum: 374, count: 3500, min: 0, max: 97)
CallstackSortedWaitlist:                           1281.00 (sum: 1281, count: 1, min: 1281, max: 1281)
Number of computed successors:   5084
Max successors for one state:    2
Number of times merged:          304
Number of times stopped:         304
Number of times breaked:         0

Total time for CPA algorithm:         1.873s (Max:     1.873s)
  Time for choose from waitlist:      0.020s
  Time for precision adjustment:      0.278s
  Time for transfer relation:         1.224s
  Time for merge operator:            0.191s
  Time for stop operator:             0.045s
  Time for adding to reached set:     0.060s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       1.877s
Time for final sat check:                            0.223s
Time for bounding assertions check:                  0.009s

CPAchecker general statistics
-----------------------------
Number of program locations:                       1899
Number of CFA edges (per node):                        2138 (count: 1899, min: 0, max: 6, avg: 1.13)
Number of relevant variables:                      368
Number of functions:                               109
Number of loops (and loop nodes):                         4 (sum: 151, min: 15, max: 101, avg: 37.75)
Size of reached set:             4781
  Number of reached locations:   958 (50%)
    Avg states per location:     4
    Max states per location:     20 (at node N862)
  Number of reached functions:   64 (59%)
  Number of partitions:          4781
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.676s
  Time for loading CPAs:          1.249s
  Time for loading parser:        0.192s
  Time for CFA construction:      1.171s
    Time for parsing file(s):     0.504s
    Time for AST to CFA:          0.421s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.190s
    Time for loop structure:      0.011s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.004s
        Function calls via function pointers:             1 (count: 1, min: 1, max: 1, avg: 1.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.128s
        Time for collecting variables:                 0.078s
        Time for solving dependencies:                 0.003s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.047s
        Time for exporting data:                       0.000s
Time for Analysis:                2.401s
CPU time for analysis:            4.770s
Time for analyzing result:        0.005s
Total time for CPAchecker:        5.078s
Total CPU time for CPAchecker:   10.020s
Time for statistics:              0.102s

Time for Garbage Collector:       0.111s (in 10 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
