scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=10 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/product-lines/email_spec8_product12.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/product-lines/email_spec8_product12.cil.c" (CPAchecker.parse, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 749: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1009: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1030: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1182: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1219: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1330: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1727: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2638: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2764: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Starting assertions check... (AbstractBMCAlgorithm.checkBoundingAssertions, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)


PredicateCPA statistics
-----------------------
Number of abstractions:            0 (0% of all post computations)
Number of strengthen sat checks:   0
Number of coverage checks:         232
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       0
Avg ABE block size:                                0.00 (sum: 0, count: 0, min: 0, max: 0)
Number of predicates discovered:          0

Time for post operator:                                0.671s
  Time for path formula creation:                      0.657s
Time for strengthen operator:                          0.025s
Time for prec operator:                                0.009s
Time for merge operator:                               0.058s
Time for coverage checks:                              0.002s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           10
Maximum loop iteration reached:                    5


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     101.28 (sum: 328262, count: 3241, min: 0, max: 154)
Number of global variables per state:              90.25 (sum: 292506, count: 3241, min: 0, max: 103)
Number of assumptions:                                 1824
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    3356
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.103s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 3356, count: 3356, min: 1, max: 1) [1 x 3356]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            3241
Max size of waitlist:            9
Average size of waitlist:        4
LoopstackSortedWaitlist:                           0.15 (sum: 399, count: 2632, min: 0, max: 100)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 2661, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.14 (sum: 370, count: 2632, min: 0, max: 96)
CallstackSortedWaitlist:                           609.00 (sum: 609, count: 1, min: 609, max: 609)
Number of computed successors:   3356
Max successors for one state:    2
Number of times merged:          116
Number of times stopped:         116
Number of times breaked:         0

Total time for CPA algorithm:         1.505s (Max:     1.505s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      0.215s
  Time for transfer relation:         1.038s
  Time for merge operator:            0.128s
  Time for stop operator:             0.025s
  Time for adding to reached set:     0.034s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       1.507s
Time for final sat check:                            0.163s
Time for bounding assertions check:                  0.005s

CPAchecker general statistics
-----------------------------
Number of program locations:                       1880
Number of CFA edges (per node):                        2115 (count: 1880, min: 0, max: 6, avg: 1.13)
Number of relevant variables:                      354
Number of functions:                               105
Number of loops (and loop nodes):                         4 (sum: 150, min: 15, max: 100, avg: 37.50)
Size of reached set:             3241
  Number of reached locations:   800 (43%)
    Avg states per location:     4
    Max states per location:     20 (at node N1744)
  Number of reached functions:   52 (50%)
  Number of partitions:          3241
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.828s
  Time for loading CPAs:          1.361s
  Time for loading parser:        0.263s
  Time for CFA construction:      1.137s
    Time for parsing file(s):     0.465s
    Time for AST to CFA:          0.370s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.223s
    Time for loop structure:      0.012s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.005s
        Function calls via function pointers:             1 (count: 1, min: 1, max: 1, avg: 1.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.155s
        Time for collecting variables:                 0.088s
        Time for solving dependencies:                 0.003s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.064s
        Time for exporting data:                       0.000s
Time for Analysis:                1.925s
CPU time for analysis:            3.810s
Time for analyzing result:        0.003s
Total time for CPAchecker:        4.753s
Total CPU time for CPAchecker:    9.300s
Time for statistics:              0.079s

Time for Garbage Collector:       0.092s (in 9 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
