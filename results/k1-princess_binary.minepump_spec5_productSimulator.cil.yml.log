scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=1 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/product-lines/minepump_spec5_productSimulator.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/product-lines/minepump_spec5_productSimulator.cil.c" (CPAchecker.parse, INFO)

line 110: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 165: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 281: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 314: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 689: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1001: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1010: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1065: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 480: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Starting assertions check... (AbstractBMCAlgorithm.checkBoundingAssertions, INFO)

Terminating because none of the following CPAs' precision can be adjusted any further  LoopBoundCPA (AbstractBMCAlgorithm.adjustConditions, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)


PredicateCPA statistics
-----------------------
Number of abstractions:            1 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (100%)
  Times precision was empty:       1 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         70
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       133
Avg ABE block size:                                133.00 (sum: 133, count: 1, min: 133, max: 133)
Number of predicates discovered:          0

Time for post operator:                                0.226s
  Time for path formula creation:                      0.220s
Time for strengthen operator:                          0.012s
Time for prec operator:                                0.008s
  Time for abstraction:                  0.000s (Max:     0.000s, Count: 1)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                               0.027s
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           1
Maximum loop iteration reached:                    2


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     10.70 (sum: 6710, count: 627, min: 0, max: 15)
Number of global variables per state:              8.99 (sum: 5634, count: 627, min: 0, max: 15)
Number of assumptions:                                  128
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     662
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.009s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 662, count: 663, min: 0, max: 1) [0, 1 x 662]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            628
Max size of waitlist:            8
Average size of waitlist:        3
LoopstackSortedWaitlist:                           0.00 (sum: 0, count: 495, min: 0, max: 0)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 495, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.00 (sum: 0, count: 495, min: 0, max: 0)
CallstackSortedWaitlist:                           133.00 (sum: 133, count: 1, min: 133, max: 133)
Number of computed successors:   662
Max successors for one state:    2
Number of times merged:          35
Number of times stopped:         35
Number of times breaked:         0

Total time for CPA algorithm:         0.486s (Max:     0.486s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      0.062s
  Time for transfer relation:         0.340s
  Time for merge operator:            0.040s
  Time for stop operator:             0.005s
  Time for adding to reached set:     0.019s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.488s
Time for final sat check:                            8.740s
Time for bounding assertions check:                 14.934s

CPAchecker general statistics
-----------------------------
Number of program locations:                       745
Number of CFA edges (per node):                         815 (count: 745, min: 0, max: 8, avg: 1.09)
Number of relevant variables:                      141
Number of functions:                               48
Number of loops (and loop nodes):                         5 (sum: 89, min: 8, max: 31, avg: 17.80)
Size of reached set:             627
  Number of reached locations:   325 (44%)
    Avg states per location:     1
    Max states per location:     8 (at node N541)
  Number of reached functions:   33 (69%)
  Number of partitions:          627
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.419s
  Time for loading CPAs:          1.323s
  Time for loading parser:        0.234s
  Time for CFA construction:      0.789s
    Time for parsing file(s):     0.307s
    Time for AST to CFA:          0.294s
    Time for CFA sanity check:    0.001s
    Time for post-processing:     0.137s
    Time for loop structure:      0.008s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.006s
        Function calls via function pointers:             1 (count: 1, min: 1, max: 1, avg: 1.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.084s
        Time for collecting variables:                 0.045s
        Time for solving dependencies:                 0.001s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.038s
        Time for exporting data:                       0.000s
Time for Analysis:               24.484s
CPU time for analysis:           27.350s
Time for analyzing result:        0.001s
Total time for CPAchecker:       26.904s
Total CPU time for CPAchecker:   32.060s
Time for statistics:              0.071s

Time for Garbage Collector:       0.155s (in 25 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
