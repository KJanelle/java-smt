scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=10 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/nla-digbench-scaling/divbin2_unwindbound20.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/nla-digbench-scaling/divbin2_unwindbound20.i" (CPAchecker.parse, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Error found, creating error path (AbstractBMCAlgorithm.analyzeCounterexample0, INFO)

{main::__CPAchecker_TMP_0@4 -> 2, counter@6 -> 4, main::b@5 -> 4, counter@5 -> 3, main::__CPAchecker_TMP_0@3 -> 1, main::b@4 -> 2, __VERIFIER_assert::cond@2 -> 0, counter@4 -> 2, main::__CPAchecker_TMP_1@2 -> 3, counter@3 -> 1, main::__CPAchecker_TMP_0@2 -> 0, main::b@3 -> 1, main::r@3 -> 3, main::q@3 -> 0, main::B@3 -> 1, main::A@3 -> 3, __VERIFIER_nondet_uint!2@ -> 3, counter@2 -> 0, abbrev_18_def -> true, abbrev_18 -> true, Integer_*_(0, 4) -> 5, abbrev_112_def -> false, abbrev_112 -> false, abbrev_110_def -> false, abbrev_110 -> false, abbrev_108_def -> false, abbrev_108 -> false, abbrev_106_def -> false, abbrev_106 -> false, abbrev_104_def -> false, abbrev_104 -> false, abbrev_102_def -> false, abbrev_102 -> false, abbrev_100_def -> false, abbrev_100 -> false, abbrev_98_def -> false, abbrev_98 -> false, abbrev_96_def -> false, abbrev_96 -> false, abbrev_94_def -> false, abbrev_94 -> false, abbrev_92_def -> false, abbrev_92 -> false, abbrev_90_def -> false, abbrev_90 -> false, abbrev_88_def -> false, abbrev_88 -> false, abbrev_86_def -> false, abbrev_86 -> false, abbrev_84_def -> false, abbrev_84 -> false, abbrev_82_def -> false, abbrev_82 -> false, abbrev_80_def -> false, abbrev_80 -> false, abbrev_78_def -> false, abbrev_78 -> false, abbrev_76_def -> false, abbrev_76 -> false, abbrev_74_def -> false, abbrev_74 -> false, abbrev_72_def -> false, abbrev_72 -> false, abbrev_70_def -> false, abbrev_70 -> false, abbrev_68_def -> false, abbrev_68 -> false, abbrev_66_def -> false, abbrev_66 -> false, abbrev_64_def -> false, abbrev_64 -> false, abbrev_62_def -> false, abbrev_62 -> false, abbrev_60_def -> false, abbrev_60 -> false, abbrev_58_def -> false, abbrev_58 -> false, abbrev_56_def -> false, abbrev_56 -> false, abbrev_54_def -> false, abbrev_54 -> false, abbrev_52_def -> false, abbrev_52 -> false, abbrev_50_def -> false, abbrev_50 -> false, abbrev_48_def -> false, abbrev_48 -> false, abbrev_46_def -> false, abbrev_46 -> false, abbrev_44_def -> false, abbrev_44 -> false, abbrev_42_def -> false, abbrev_42 -> false, abbrev_40_def -> false, abbrev_40 -> false, abbrev_38_def -> false, abbrev_38 -> false, abbrev_36_def -> false, abbrev_36 -> false, abbrev_34_def -> false, abbrev_34 -> false, abbrev_32_def -> false, abbrev_32 -> false, abbrev_30_def -> false, abbrev_30 -> false, abbrev_28_def -> false, abbrev_28 -> false, abbrev_26_def -> false, abbrev_26 -> false, abbrev_24_def -> false, abbrev_24 -> false, abbrev_22_def -> false, abbrev_22 -> false, abbrev_20_def -> false, abbrev_20 -> false, abbrev_16_def -> false, abbrev_16 -> false, abbrev_14_def -> false, abbrev_14 -> false}
{main::__CPAchecker_TMP_1@2 -> 3, main::__CPAchecker_TMP_0@4 -> 2, main::__CPAchecker_TMP_0@3 -> 1, main::__CPAchecker_TMP_0@2 -> 0, main::B@3 -> 1, main::b@5 -> 4, main::b@3 -> 1, main::b@4 -> 2, main::A@3 -> 3, counter@2 -> 0, counter@3 -> 1, counter@6 -> 4, main::r@3 -> 3, counter@4 -> 2, counter@5 -> 3, __VERIFIER_nondet_uint!2@ -> 3, __VERIFIER_assert::cond@2 -> 0, main::q@3 -> 0, Integer_*_(0, 4) -> 5}
[main::__CPAchecker_TMP_1@2: 3, main::__CPAchecker_TMP_0@4: 2, main::__CPAchecker_TMP_0@3: 1, main::__CPAchecker_TMP_0@2: 0, main::B@3: 1, main::b@5: 4, main::b@3: 1, main::b@4: 2, main::A@3: 3, counter@2: 0, counter@3: 1, counter@6: 4, main::r@3: 3, counter@4: 2, counter@5: 3, __VERIFIER_nondet_uint!2@: 3, __VERIFIER_assert::cond@2: 0, main::q@3: 0, Integer_*_(0, 4): 5]
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)


PredicateCPA statistics
-----------------------
Number of abstractions:            65 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         65 (100%)
  Times precision was empty:       65 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         90
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       167
Avg ABE block size:                                84.85 (sum: 5515, count: 65, min: 20, max: 167)
Number of predicates discovered:          0

Time for post operator:                                0.366s
  Time for path formula creation:                      0.355s
Time for strengthen operator:                          0.012s
Time for prec operator:                                0.013s
  Time for abstraction:                  0.003s (Max:     0.001s, Count: 65)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                               0.006s
Time for coverage checks:                              0.001s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           10
Maximum loop iteration reached:                    11


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     5.21 (sum: 6189, count: 1189, min: 0, max: 7)
Number of global variables per state:              0.99 (sum: 1179, count: 1189, min: 0, max: 1)
Number of assumptions:                                  720
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    1233
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.018s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.032s
Automaton transfers with branching:                0
Automaton transfer successors:                     0.95 (sum: 1233, count: 1298, min: 0, max: 1) [0 x 65, 1 x 1233]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            1189
Max size of waitlist:            3
Average size of waitlist:        2
LoopstackSortedWaitlist:                           1.91 (sum: 780, count: 409, min: 0, max: 119)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 409, min: 0, max: 0)
LoopIterationSortedWaitlist:                       1.91 (sum: 780, count: 409, min: 0, max: 119)
CallstackSortedWaitlist:                           780.00 (sum: 780, count: 1, min: 780, max: 780)
Number of computed successors:   1233
Max successors for one state:    2
Number of times merged:          45
Number of times stopped:         45
Number of times breaked:         0

Total time for CPA algorithm:         0.827s (Max:     0.827s)
  Time for choose from waitlist:      0.019s
  Time for precision adjustment:      0.122s
  Time for transfer relation:         0.608s
  Time for merge operator:            0.015s
  Time for stop operator:             0.014s
  Time for adding to reached set:     0.030s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.829s
Time for final sat check:                          124.211s
Time for error-path creation:                        0.113s
Time for error-path post-processing:                 0.144s

CPAchecker general statistics
-----------------------------
Number of program locations:                       69
Number of CFA edges (per node):                          68 (count: 69, min: 0, max: 2, avg: 0.99)
Number of relevant variables:                      10
Number of functions:                               4
Number of loops (and loop nodes):                         2 (sum: 18, min: 6, max: 12, avg: 9.00)
Size of reached set:             1189
  Number of reached locations:   54 (78%)
    Avg states per location:     22
    Max states per location:     65 (at node N1)
  Number of reached functions:   3 (75%)
  Number of partitions:          1189
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       65

Time for analysis setup:          2.022s
  Time for loading CPAs:          1.153s
  Time for loading parser:        0.201s
  Time for CFA construction:      0.598s
    Time for parsing file(s):     0.338s
    Time for AST to CFA:          0.115s
    Time for CFA sanity check:    0.001s
    Time for post-processing:     0.097s
    Time for loop structure:      0.006s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.002s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.063s
        Time for collecting variables:                 0.043s
        Time for solving dependencies:                 0.001s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.019s
        Time for exporting data:                       0.000s
Time for Analysis:              125.382s
CPU time for analysis:          129.860s
Time for analyzing result:        0.002s
Total time for CPAchecker:      127.405s
Total CPU time for CPAchecker:  133.720s
Time for statistics:              0.067s

Time for Garbage Collector:       0.202s (in 36 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: FALSE. Property violation (unreach-call: reach_error(); called in line 21) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
