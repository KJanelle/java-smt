scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=10 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/nla-digbench-scaling/dijkstra-u_unwindbound5.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/nla-digbench-scaling/dijkstra-u_unwindbound5.c" (CPAchecker.parse, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Error found, creating error path (AbstractBMCAlgorithm.analyzeCounterexample0, INFO)

{counter@6 -> 4, main::__CPAchecker_TMP_1@3 -> 3, main::r@4 -> 3, main::p@5 -> 0, main::p@4 -> 0, main::h@4 -> 5, main::q@5 -> 5, counter@5 -> 3, main::__CPAchecker_TMP_0@3 -> 1, main::q@4 -> 4, __VERIFIER_assert::cond@10 -> 0, __VERIFIER_assert::cond@9 -> 1, __VERIFIER_assert::cond@8 -> 1, __VERIFIER_assert::cond@7 -> 1, __VERIFIER_assert::cond@6 -> 1, __VERIFIER_assert::cond@5 -> 1, __VERIFIER_assert::cond@4 -> 1, __VERIFIER_assert::cond@3 -> 1, __VERIFIER_assert::cond@2 -> 1, counter@4 -> 2, main::__CPAchecker_TMP_1@2 -> 2, counter@3 -> 1, main::__CPAchecker_TMP_0@2 -> 0, main::h@3 -> 0, main::r@3 -> 3, main::q@3 -> 1, main::p@3 -> 0, assume_abort_if_not::cond@2 -> 1, main::n@3 -> 3, __VERIFIER_nondet_uint!2@ -> 3, counter@2 -> 0, abbrev_26_def -> true, abbrev_26 -> true, abbrev_24_def -> true, abbrev_24 -> true, abbrev_22_def -> true, abbrev_22 -> true, abbrev_20_def -> true, abbrev_20 -> true, Integer_/_(4, 4) -> 5, Integer_/_(0, 2) -> 0, Integer_*_(12070, 3) -> -2704, Integer_*_(9366, 3) -> 12069, Integer_*_(6034, 3) -> 6035, Integer_*_(3328, 4) -> 3329, Integer_*_(625, 4) -> 6033, Integer_*_(623, 4) -> 208, Integer_*_(623, 3) -> 624, Integer_*_(207, 4) -> 414, Integer_*_(205, 4) -> 206, Integer_*_(205, 0) -> 831, Integer_*_(135, 3) -> 203, Integer_*_(133, 5) -> 134, Integer_*_(133, 3) -> 204, Integer_*_(66, 5) -> 132, Integer_*_(66, 4) -> 622, Integer_*_(64, 5) -> 65, Integer_*_(62, 5) -> 63, Integer_*_(60, 5) -> 135, Integer_*_(60, 3) -> 64, Integer_*_(48, 0) -> 66, Integer_*_(24, 4) -> 6034, Integer_*_(16, 3) -> 12070, Integer_*_(12, 0) -> 207, Integer_*_(5, 5) -> 62, Integer_*_(4, 4) -> 9366, Integer_*_(4, 3) -> 625, Integer_*_(3, 5) -> 61, Integer_*_(3, 4) -> 625, Integer_*_(3, 3) -> 832, Integer_*_(0, 5) -> 133, Integer_*_(0, 4) -> 623, Integer_*_(0, 3) -> 205, Integer_*_(0, 0) -> 0, abbrev_52_def -> false, abbrev_52 -> false, abbrev_50_def -> false, abbrev_50 -> false, abbrev_48_def -> false, abbrev_48 -> false, abbrev_46_def -> false, abbrev_46 -> false, abbrev_44_def -> false, abbrev_44 -> false, abbrev_42_def -> false, abbrev_42 -> false, abbrev_40_def -> false, abbrev_40 -> false, abbrev_38_def -> false, abbrev_38 -> false, abbrev_36_def -> false, abbrev_36 -> false, abbrev_34_def -> false, abbrev_34 -> false, abbrev_32_def -> false, abbrev_32 -> false, abbrev_30_def -> false, abbrev_30 -> false, abbrev_28_def -> false, abbrev_28 -> false, abbrev_18_def -> false, abbrev_18 -> false, abbrev_16_def -> false, abbrev_16 -> false, abbrev_14_def -> false, abbrev_14 -> false}
{__VERIFIER_assert::cond@18 -> 0, main::__CPAchecker_TMP_1@9 -> 3, main::p@11 -> 16, main::h@11 -> 4, main::q@12 -> 4, main::__CPAchecker_TMP_1@2 -> 2, counter@2 -> 0, counter@3 -> 1, main::p@4 -> 0, main::n@3 -> 1, counter@6 -> 4, main::r@4 -> 1, counter@4 -> 2, counter@5 -> 3, main::h@4 -> 0, assume_abort_if_not::cond@2 -> 1, __VERIFIER_nondet_uint!2@ -> 1, __VERIFIER_assert::cond@6 -> 1, __VERIFIER_assert::cond@4 -> 1, __VERIFIER_assert::cond@2 -> 1, __VERIFIER_assert::cond@8 -> 1, main::__CPAchecker_TMP_0@3 -> 1, main::__CPAchecker_TMP_0@2 -> 0, main::q@5 -> 4, main::q@4 -> 1, __VERIFIER_assert::cond@12 -> 1, __VERIFIER_assert::cond@14 -> 1, __VERIFIER_assert::cond@16 -> 1, __VERIFIER_assert::cond@10 -> 1, Integer_/_(4, 4) -> 4, Integer_/_(0, 2) -> 16, Integer_*_(23307, 1) -> 23308, Integer_*_(7857, 1) -> 23306, Integer_*_(7855, 4) -> 7856, Integer_*_(7853, 4) -> 7854, Integer_*_(7851, 4) -> -259, Integer_*_(7850, 1) -> -1830, Integer_*_(6020, 4) -> 7852, Integer_*_(6020, 1) -> 7849, Integer_*_(3924, 1) -> 3925, Integer_*_(2092, 4) -> 2093, Integer_*_(262, 4) -> -519, Integer_*_(262, 1) -> 263, Integer_*_(261, 4) -> -778, Integer_*_(258, 4) -> 260, Integer_*_(258, 0) -> 522, Integer_*_(257, 4) -> 3923, Integer_*_(256, 4) -> 23307, Integer_*_(64, 4) -> 7855, Integer_*_(48, 4) -> 7857, Integer_*_(48, 1) -> 7853, Integer_*_(16, 16) -> 0, Integer_*_(16, 1) -> 7850, Integer_*_(16, 0) -> 261, Integer_*_(8, 4) -> 3924, Integer_*_(4, 4) -> 6020, Integer_*_(4, 1) -> 257, Integer_*_(4, 0) -> 7851, Integer_*_(1, 4) -> 257, Integer_*_(1, 1) -> 523, Integer_*_(0, 4) -> 262, Integer_*_(0, 1) -> 258, Integer_*_(0, 0) -> 0}
[__VERIFIER_assert::cond@18: 0, main::__CPAchecker_TMP_1@9: 3, main::p@11: 16, main::h@11: 4, main::q@12: 4, main::__CPAchecker_TMP_1@2: 2, counter@2: 0, counter@3: 1, main::p@4: 0, main::n@3: 1, counter@6: 4, main::r@4: 1, counter@4: 2, counter@5: 3, main::h@4: 0, assume_abort_if_not::cond@2: 1, __VERIFIER_nondet_uint!2@: 1, __VERIFIER_assert::cond@6: 1, __VERIFIER_assert::cond@4: 1, __VERIFIER_assert::cond@2: 1, __VERIFIER_assert::cond@8: 1, main::__CPAchecker_TMP_0@3: 1, main::__CPAchecker_TMP_0@2: 0, main::q@5: 4, main::q@4: 1, __VERIFIER_assert::cond@12: 1, __VERIFIER_assert::cond@14: 1, __VERIFIER_assert::cond@16: 1, __VERIFIER_assert::cond@10: 1, Integer_/_(4, 4): 4, Integer_/_(0, 2): 16, Integer_*_(23307, 1): 23308, Integer_*_(7857, 1): 23306, Integer_*_(7855, 4): 7856, Integer_*_(7853, 4): 7854, Integer_*_(7851, 4): -259, Integer_*_(7850, 1): -1830, Integer_*_(6020, 4): 7852, Integer_*_(6020, 1): 7849, Integer_*_(3924, 1): 3925, Integer_*_(2092, 4): 2093, Integer_*_(262, 4): -519, Integer_*_(262, 1): 263, Integer_*_(261, 4): -778, Integer_*_(258, 4): 260, Integer_*_(258, 0): 522, Integer_*_(257, 4): 3923, Integer_*_(256, 4): 23307, Integer_*_(64, 4): 7855, Integer_*_(48, 4): 7857, Integer_*_(48, 1): 7853, Integer_*_(16, 16): 0, Integer_*_(16, 1): 7850, Integer_*_(16, 0): 261, Integer_*_(8, 4): 3924, Integer_*_(4, 4): 6020, Integer_*_(4, 1): 257, Integer_*_(4, 0): 7851, Integer_*_(1, 4): 257, Integer_*_(1, 1): 523, Integer_*_(0, 4): 262, Integer_*_(0, 1): 258, Integer_*_(0, 0): 0]
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)


PredicateCPA statistics
-----------------------
Number of abstractions:            54 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (100%)
  Times precision was empty:       54 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         8
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       80
Avg ABE block size:                                46.33 (sum: 2502, count: 54, min: 22, max: 80)
Number of predicates discovered:          0

Time for post operator:                                0.202s
  Time for path formula creation:                      0.194s
Time for strengthen operator:                          0.010s
Time for prec operator:                                0.014s
  Time for abstraction:                  0.005s (Max:     0.001s, Count: 54)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                               0.005s
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           10
Maximum loop iteration reached:                    6


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     5.52 (sum: 3232, count: 585, min: 0, max: 7)
Number of global variables per state:              0.99 (sum: 577, count: 585, min: 0, max: 1)
Number of assumptions:                                  216
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     588
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.013s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                     0.91 (sum: 588, count: 643, min: 0, max: 1) [0 x 55, 1 x 588]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            585
Max size of waitlist:            3
Average size of waitlist:        2
LoopstackSortedWaitlist:                           0.73 (sum: 247, count: 338, min: 0, max: 46)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 338, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.73 (sum: 247, count: 338, min: 0, max: 46)
CallstackSortedWaitlist:                           247.00 (sum: 247, count: 1, min: 247, max: 247)
Number of computed successors:   588
Max successors for one state:    2
Number of times merged:          4
Number of times stopped:         4
Number of times breaked:         0

Total time for CPA algorithm:         0.447s (Max:     0.447s)
  Time for choose from waitlist:      0.008s
  Time for precision adjustment:      0.067s
  Time for transfer relation:         0.330s
  Time for merge operator:            0.006s
  Time for stop operator:             0.006s
  Time for adding to reached set:     0.013s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.448s
Time for final sat check:                            5.465s
Time for error-path creation:                        0.138s
Time for error-path post-processing:                 0.404s

CPAchecker general statistics
-----------------------------
Number of program locations:                       73
Number of CFA edges (per node):                          81 (count: 73, min: 0, max: 9, avg: 1.11)
Number of relevant variables:                      10
Number of functions:                               4
Number of loops (and loop nodes):                         2 (sum: 24, min: 6, max: 18, avg: 12.00)
Size of reached set:             585
  Number of reached locations:   66 (90%)
    Avg states per location:     8
    Max states per location:     54 (at node N1)
  Number of reached functions:   4 (100%)
  Number of partitions:          585
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       54

Time for analysis setup:          2.142s
  Time for loading CPAs:          1.181s
  Time for loading parser:        0.258s
  Time for CFA construction:      0.638s
    Time for parsing file(s):     0.327s
    Time for AST to CFA:          0.155s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.108s
    Time for loop structure:      0.006s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.006s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.057s
        Time for collecting variables:                 0.036s
        Time for solving dependencies:                 0.000s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.021s
        Time for exporting data:                       0.000s
Time for Analysis:                6.576s
CPU time for analysis:           10.420s
Time for analyzing result:        0.002s
Total time for CPAchecker:        8.719s
Total CPU time for CPAchecker:   14.520s
Time for statistics:              0.039s

Time for Garbage Collector:       0.132s (in 10 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: FALSE. Property violation (unreach-call: reach_error(); called in line 14) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
