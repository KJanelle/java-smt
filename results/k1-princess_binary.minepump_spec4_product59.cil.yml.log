scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=1 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/product-lines/minepump_spec4_product59.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/product-lines/minepump_spec4_product59.cil.c" (CPAchecker.parse, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 325: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 389: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 567: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 599: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 788: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Starting assertions check... (AbstractBMCAlgorithm.checkBoundingAssertions, INFO)

Terminating because none of the following CPAs' precision can be adjusted any further  LoopBoundCPA (AbstractBMCAlgorithm.adjustConditions, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)


PredicateCPA statistics
-----------------------
Number of abstractions:            1 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (100%)
  Times precision was empty:       1 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         20
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Avg ABE block size:                                75.00 (sum: 75, count: 1, min: 75, max: 75)
Number of predicates discovered:          0

Time for post operator:                                0.078s
  Time for path formula creation:                      0.077s
Time for strengthen operator:                          0.009s
Time for prec operator:                                0.002s
  Time for abstraction:                  0.001s (Max:     0.001s, Count: 1)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                               0.008s
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           1
Maximum loop iteration reached:                    2


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     4.82 (sum: 1142, count: 237, min: 0, max: 9)
Number of global variables per state:              3.22 (sum: 762, count: 237, min: 0, max: 6)
Number of assumptions:                                   54
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     247
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.008s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 247, count: 248, min: 0, max: 1) [0, 1 x 247]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            238
Max size of waitlist:            4
Average size of waitlist:        1
LoopstackSortedWaitlist:                           0.00 (sum: 0, count: 202, min: 0, max: 0)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 202, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.00 (sum: 0, count: 202, min: 0, max: 0)
CallstackSortedWaitlist:                           36.00 (sum: 36, count: 1, min: 36, max: 36)
Number of computed successors:   247
Max successors for one state:    2
Number of times merged:          10
Number of times stopped:         10
Number of times breaked:         0

Total time for CPA algorithm:         0.171s (Max:     0.171s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      0.026s
  Time for transfer relation:         0.119s
  Time for merge operator:            0.009s
  Time for stop operator:             0.001s
  Time for adding to reached set:     0.006s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.173s
Time for final sat check:                            0.687s
Time for bounding assertions check:                  0.708s

CPAchecker general statistics
-----------------------------
Number of program locations:                       654
Number of CFA edges (per node):                         701 (count: 654, min: 0, max: 8, avg: 1.07)
Number of relevant variables:                      129
Number of functions:                               40
Number of loops (and loop nodes):                         5 (sum: 82, min: 8, max: 24, avg: 16.40)
Size of reached set:             237
  Number of reached locations:   236 (36%)
    Avg states per location:     1
    Max states per location:     2 (at node N52)
  Number of reached functions:   24 (60%)
  Number of partitions:          237
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.462s
  Time for loading CPAs:          1.393s
  Time for loading parser:        0.217s
  Time for CFA construction:      0.788s
    Time for parsing file(s):     0.378s
    Time for AST to CFA:          0.239s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.122s
    Time for loop structure:      0.007s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.005s
        Function calls via function pointers:             1 (count: 1, min: 1, max: 1, avg: 1.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.074s
        Time for collecting variables:                 0.045s
        Time for solving dependencies:                 0.000s
        Time for building hierarchy:                   0.001s
        Time for building classification:              0.028s
        Time for exporting data:                       0.000s
Time for Analysis:                1.797s
CPU time for analysis:            3.060s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.260s
Total CPU time for CPAchecker:    7.900s
Time for statistics:              0.057s

Time for Garbage Collector:       0.089s (in 8 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
