scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=1 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/recursive-simple/id2_b5_o10.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/recursive-simple/id2_b5_o10.c" (CPAchecker.parse, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (TargetLocationProvider:CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Recursion detected. Defaulting to selecting all locations as potential target locations. (TargetLocationProvider:TargetLocationProviderImpl.tryGetAutomatonTargetLocations, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 18: Unsupported feature (recursion): __CPAchecker_TMP_0 = id(x - 1); (line was originally unsigned int ret = id(x-1) + 1;) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)


PredicateCPA statistics
-----------------------
Number of abstractions:            0 (0% of all post computations)
Number of strengthen sat checks:   0
Number of coverage checks:         0
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       0
Avg ABE block size:                                0.00 (sum: 0, count: 0, min: 0, max: 0)
Number of predicates discovered:          0

Time for post operator:                                0.032s
  Time for path formula creation:                      0.032s
Time for strengthen operator:                          0.000s
Time for prec operator:                                0.001s
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           1
Maximum loop iteration reached:                    0


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     0.09 (sum: 2, count: 23, min: 0, max: 1)
Number of global variables per state:              0.00 (sum: 0, count: 23, min: 0, max: 0)
Number of assumptions:                                    4
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                      22
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.000s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 22, count: 22, min: 1, max: 1) [1 x 22]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            21
Max size of waitlist:            3
Average size of waitlist:        1
LoopstackSortedWaitlist:                           0.00 (sum: 0, count: 17, min: 0, max: 0)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 17, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.00 (sum: 0, count: 17, min: 0, max: 0)
CallstackSortedWaitlist:                           4.00 (sum: 4, count: 1, min: 4, max: 4)
Number of computed successors:   22
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         0
Number of times breaked:         0

Total time for CPA algorithm:         0.058s (Max:     0.058s)
  Time for choose from waitlist:      0.001s
  Time for precision adjustment:      0.006s
  Time for transfer relation:         0.049s
  Time for stop operator:             0.000s
  Time for adding to reached set:     0.000s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.059s

CPAchecker general statistics
-----------------------------
Number of program locations:                       46
Number of CFA edges (per node):                          45 (count: 46, min: 0, max: 2, avg: 0.98)
Number of relevant variables:                      10
Number of functions:                               4
Number of loops (and loop nodes):                         0 (sum: 0, min: 0, max: 0, avg: 0.00)
Size of reached set:             23
  Number of reached locations:   23 (50%)
    Avg states per location:     1
    Max states per location:     1 (at node N5)
  Number of reached functions:   3 (75%)
  Number of partitions:          23
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list:       3

Time for analysis setup:          2.021s
  Time for loading CPAs:          1.164s
  Time for loading parser:        0.218s
  Time for CFA construction:      0.548s
    Time for parsing file(s):     0.323s
    Time for AST to CFA:          0.102s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.085s
    Time for loop structure:      0.002s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.003s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.055s
        Time for collecting variables:                 0.034s
        Time for solving dependencies:                 0.002s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.018s
        Time for exporting data:                       0.000s
Time for Analysis:                0.139s
CPU time for analysis:            0.270s
Total time for CPAchecker:        2.161s
Total CPU time for CPAchecker:    4.180s
Time for statistics:              0.030s

Time for Garbage Collector:       0.070s (in 7 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
