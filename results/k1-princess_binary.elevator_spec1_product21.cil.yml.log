scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=1 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/product-lines/elevator_spec1_product21.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/product-lines/elevator_spec1_product21.cil.c" (CPAchecker.parse, INFO)

line 138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 343: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 383: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 476: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 867: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 985: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1931: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2251: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2088: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Starting assertions check... (AbstractBMCAlgorithm.checkBoundingAssertions, INFO)

Terminating because none of the following CPAs' precision can be adjusted any further  LoopBoundCPA (AbstractBMCAlgorithm.adjustConditions, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)


PredicateCPA statistics
-----------------------
Number of abstractions:            0 (0% of all post computations)
Number of strengthen sat checks:   0
Number of coverage checks:         0
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       0
Avg ABE block size:                                0.00 (sum: 0, count: 0, min: 0, max: 0)
Number of predicates discovered:          0

Time for post operator:                                0.285s
  Time for path formula creation:                      0.278s
Time for strengthen operator:                          0.012s
Time for prec operator:                                0.006s
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           1
Maximum loop iteration reached:                    2


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     56.72 (sum: 45316, count: 799, min: 0, max: 75)
Number of global variables per state:              50.76 (sum: 40557, count: 799, min: 0, max: 58)
Number of assumptions:                                  664
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     798
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.031s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 798, count: 798, min: 1, max: 1) [1 x 798]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            799
Max size of waitlist:            1
Average size of waitlist:        1
LoopstackSortedWaitlist:                           0.00 (sum: 0, count: 799, min: 0, max: 0)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 799, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.00 (sum: 0, count: 799, min: 0, max: 0)
CallstackSortedWaitlist:                           0.00 (sum: 0, count: 1, min: 0, max: 0)
Number of computed successors:   798
Max successors for one state:    1
Number of times merged:          0
Number of times stopped:         0
Number of times breaked:         0

Total time for CPA algorithm:         0.532s (Max:     0.532s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      0.077s
  Time for transfer relation:         0.413s
  Time for stop operator:             0.007s
  Time for adding to reached set:     0.010s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.534s
Time for final sat check:                            0.212s
Time for bounding assertions check:                  0.839s

CPAchecker general statistics
-----------------------------
Number of program locations:                       2261
Number of CFA edges (per node):                        2740 (count: 2261, min: 0, max: 21, avg: 1.21)
Number of relevant variables:                      335
Number of functions:                               74
Number of loops (and loop nodes):                         9 (sum: 175, min: 11, max: 37, avg: 19.44)
Size of reached set:             799
  Number of reached locations:   633 (28%)
    Avg states per location:     1
    Max states per location:     6 (at node N1978)
  Number of reached functions:   41 (55%)
  Number of partitions:          799
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.760s
  Time for loading CPAs:          1.318s
  Time for loading parser:        0.219s
  Time for CFA construction:      1.159s
    Time for parsing file(s):     0.467s
    Time for AST to CFA:          0.398s
    Time for CFA sanity check:    0.001s
    Time for post-processing:     0.224s
    Time for loop structure:      0.014s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.007s
        Function calls via function pointers:             1 (count: 1, min: 1, max: 1, avg: 1.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.147s
        Time for collecting variables:                 0.089s
        Time for solving dependencies:                 0.002s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.056s
        Time for exporting data:                       0.000s
Time for Analysis:                2.122s
CPU time for analysis:            3.960s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.883s
Total CPU time for CPAchecker:    9.300s
Time for statistics:              0.059s

Time for Garbage Collector:       0.094s (in 9 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
