scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=1 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -64 test/programs/benchmarks/aws-c-common/aws_ptr_eq_harness.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/aws-c-common/aws_ptr_eq_harness.i" (CPAchecker.parse, INFO)

line 3002: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 3109: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6069: Dead code detected: [0 && ((u.i & 0x3) == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6069: Dead code detected: [!(0 && ((u.i & 0x3) == 0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6070: Dead code detected: const uint32_t *k = (const uint32_t *)key; (CFACreationUtils.addEdgeToCFA, INFO)

line 6179: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6218: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6224: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6253: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6372: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6381: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6422: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6464: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6465: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6499: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6516: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6536: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6574: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6598: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6604: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6609: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6646: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6650: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6776: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6798: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7076: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 6709: Function pointer *(state->destroy_key_fn) with type aws_hash_callback_destroy_fn * is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

line 6712: Function pointer *(state->destroy_value_fn) with type aws_hash_callback_destroy_fn * is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

line 6743: Function pointer *(state->destroy_key_fn) with type aws_hash_callback_destroy_fn * is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

line 6746: Function pointer *(state->destroy_value_fn) with type aws_hash_callback_destroy_fn * is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

line 6545: Function pointer *callback with type int (*)(void *context, struct aws_hash_element *pElement) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

line 6508: Function pointer *(state->destroy_key_fn) with type aws_hash_callback_destroy_fn * is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

line 6511: Function pointer *(state->destroy_value_fn) with type aws_hash_callback_destroy_fn * is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

line 6175: Function pointer *(state->hash_fn) with type aws_hash_fn * is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

line 6205: Function pointer *equals_fn with type aws_hash_callback_eq_fn * is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Starting assertions check... (AbstractBMCAlgorithm.checkBoundingAssertions, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)


PredicateCPA statistics
-----------------------
Number of abstractions:            1 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (100%)
  Times precision was empty:       1 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         0
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       8
Avg ABE block size:                                8.00 (sum: 8, count: 1, min: 8, max: 8)
Number of predicates discovered:          0

Time for post operator:                                0.080s
  Time for path formula creation:                      0.074s
Time for strengthen operator:                          0.007s
Time for prec operator:                                0.011s
  Time for abstraction:                  0.001s (Max:     0.001s, Count: 1)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           1
Maximum loop iteration reached:                    0


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     0.00 (sum: 2, count: 1094, min: 0, max: 1)
Number of global variables per state:              0.00 (sum: 0, count: 1094, min: 0, max: 0)
Number of assumptions:                                    2
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    1094
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.003s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 1094, count: 1095, min: 0, max: 1) [0, 1 x 1094]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            1095
Max size of waitlist:            2
Average size of waitlist:        1
LoopstackSortedWaitlist:                           0.00 (sum: 1, count: 1094, min: 0, max: 1)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 1094, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.00 (sum: 1, count: 1094, min: 0, max: 1)
CallstackSortedWaitlist:                           1.00 (sum: 1, count: 1, min: 1, max: 1)
Number of computed successors:   1094
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         0
Number of times breaked:         0

Total time for CPA algorithm:         0.295s (Max:     0.295s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      0.040s
  Time for transfer relation:         0.188s
  Time for stop operator:             0.007s
  Time for adding to reached set:     0.025s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.297s
Time for final sat check:                            0.266s
Time for bounding assertions check:                  0.005s

CPAchecker general statistics
-----------------------------
Number of program locations:                       3943
Number of CFA edges (per node):                        4597 (count: 3943, min: 0, max: 111, avg: 1.17)
Number of relevant variables:                      632
Number of functions:                               164
Number of loops (and loop nodes):                        18 (sum: 344, min: 4, max: 34, avg: 19.11)
Size of reached set:             1094
  Number of reached locations:   1094 (28%)
    Avg states per location:     1
    Max states per location:     1 (at node N10)
  Number of reached functions:   4 (2%)
  Number of partitions:          1094
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.610s
  Time for loading CPAs:          1.494s
  Time for loading parser:        0.246s
  Time for CFA construction:      1.799s
    Time for parsing file(s):     0.588s
    Time for AST to CFA:          0.709s
    Time for CFA sanity check:    0.001s
    Time for post-processing:     0.389s
    Time for loop structure:      0.025s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.008s
        Function calls via function pointers:             9 (count: 1, min: 9, max: 9, avg: 9.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.279s
        Time for collecting variables:                 0.208s
        Time for solving dependencies:                 0.004s
        Time for building hierarchy:                   0.001s
        Time for building classification:              0.066s
        Time for exporting data:                       0.000s
Time for Analysis:                0.783s
CPU time for analysis:            1.510s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.394s
Total CPU time for CPAchecker:    8.590s
Time for statistics:              0.054s

Time for Garbage Collector:       0.108s (in 9 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
