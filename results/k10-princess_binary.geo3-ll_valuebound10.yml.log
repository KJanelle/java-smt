scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=10 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess_binary -setprop proveroptions.option=use_binary -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/nla-digbench-scaling/geo3-ll_valuebound10.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/nla-digbench-scaling/geo3-ll_valuebound10.c" (CPAchecker.parse, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

The following configuration options were specified but are not used:
 proveroptions.option 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Error found, creating error path (AbstractBMCAlgorithm.analyzeCounterexample0, INFO)

{main::y@12 -> 20, main::x@12 -> 19, main::c@12 -> 10, __VERIFIER_assert::cond@11 -> 0, main::y@11 -> 18, main::x@11 -> 17, main::c@11 -> 9, __VERIFIER_assert::cond@10 -> 1, main::y@10 -> 16, main::x@10 -> 15, main::c@10 -> 8, __VERIFIER_assert::cond@9 -> 1, main::y@9 -> 14, main::x@9 -> 13, main::c@9 -> 7, __VERIFIER_assert::cond@8 -> 1, main::y@8 -> 12, main::x@8 -> 11, main::c@8 -> 6, __VERIFIER_assert::cond@7 -> 1, main::y@7 -> 10, main::x@7 -> 9, main::c@7 -> 5, __VERIFIER_assert::cond@6 -> 1, main::y@6 -> 8, main::x@6 -> 7, main::c@6 -> 4, __VERIFIER_assert::cond@5 -> 1, main::y@5 -> 6, main::x@5 -> 5, main::c@5 -> 3, __VERIFIER_assert::cond@4 -> 1, main::y@4 -> 4, main::x@4 -> 3, main::c@4 -> 2, __VERIFIER_assert::cond@3 -> 1, __VERIFIER_assert::cond@2 -> 1, main::az@3 -> 3, main::c@3 -> 1, main::y@3 -> 1, main::x@3 -> 0, assume_abort_if_not::cond@4 -> 1, main::__CPAchecker_TMP_2@3 -> 1, main::k@3 -> 10, __VERIFIER_nondet_int!4@ -> 10, assume_abort_if_not::cond@3 -> 1, main::__CPAchecker_TMP_1@3 -> 1, main::a@3 -> 0, __VERIFIER_nondet_int!3@ -> 0, assume_abort_if_not::cond@2 -> 1, main::__CPAchecker_TMP_0@3 -> 1, main::z@3 -> 2, __VERIFIER_nondet_int!2@ -> 2, abbrev_24_def -> true, abbrev_24 -> true, abbrev_22_def -> true, abbrev_22 -> true, abbrev_20_def -> true, abbrev_20 -> true, abbrev_18_def -> true, abbrev_18 -> true, abbrev_16_def -> true, abbrev_16 -> true, abbrev_14_def -> true, abbrev_14 -> true, Integer_*_(18, 2) -> 20, Integer_*_(17, 2) -> 19, Integer_*_(16, 2) -> 18, Integer_*_(15, 2) -> 17, Integer_*_(14, 2) -> 16, Integer_*_(13, 2) -> 15, Integer_*_(12, 2) -> 14, Integer_*_(11, 2) -> 13, Integer_*_(10, 2) -> 12, Integer_*_(9, 2) -> 11, Integer_*_(8, 2) -> 10, Integer_*_(7, 2) -> 9, Integer_*_(6, 2) -> 8, Integer_*_(5, 2) -> 7, Integer_*_(4, 2) -> 6, Integer_*_(3, 20) -> 59, Integer_*_(3, 18) -> 21, Integer_*_(3, 16) -> 74, Integer_*_(3, 14) -> 60, Integer_*_(3, 12) -> 100, Integer_*_(3, 10) -> 90, Integer_*_(3, 8) -> 118, Integer_*_(3, 6) -> 112, Integer_*_(3, 4) -> 127, Integer_*_(3, 2) -> 5, Integer_*_(3, 1) -> 126, Integer_*_(2, 19) -> 58, Integer_*_(2, 17) -> 38, Integer_*_(2, 15) -> 89, Integer_*_(2, 13) -> 73, Integer_*_(2, 11) -> 111, Integer_*_(2, 9) -> 99, Integer_*_(2, 7) -> 125, Integer_*_(2, 5) -> 117, Integer_*_(2, 3) -> 130, Integer_*_(2, 0) -> 126, Integer_*_(1, 2) -> 4, Integer_*_(0, 2) -> 3}
{__VERIFIER_assert::cond@20 -> 0, main::y@24 -> 28, main::x@24 -> 27, main::c@24 -> 10, __VERIFIER_assert::cond@18 -> 1, main::y@22 -> 25, main::x@22 -> 24, main::c@22 -> 9, __VERIFIER_assert::cond@16 -> 1, main::y@20 -> 22, main::x@20 -> 21, main::c@20 -> 8, __VERIFIER_assert::cond@14 -> 1, main::y@18 -> 19, main::x@18 -> 18, main::c@18 -> 7, main::y@16 -> 16, main::x@16 -> 15, main::c@16 -> 6, main::y@14 -> 13, main::x@14 -> 12, main::c@14 -> 5, main::az@6 -> 4, assume_abort_if_not::cond@6 -> 1, main::k@5 -> 10, main::a@4 -> 1, main::__CPAchecker_TMP_1@3 -> 1, main::x@10 -> 10, main::x@12 -> 8, __VERIFIER_nondet_int!4@ -> 10, main::x@6 -> 1, main::z@3 -> 2, main::x@8 -> 5, main::y@12 -> 6, assume_abort_if_not::cond@2 -> 1, assume_abort_if_not::cond@4 -> 1, __VERIFIER_assert::cond@6 -> 1, __VERIFIER_assert::cond@4 -> 1, __VERIFIER_assert::cond@2 -> 1, __VERIFIER_assert::cond@8 -> 1, main::y@8 -> 4, main::__CPAchecker_TMP_0@3 -> 1, main::y@6 -> 1, main::__CPAchecker_TMP_2@3 -> 1, __VERIFIER_nondet_int!2@ -> 2, main::c@8 -> 2, main::c@6 -> 1, main::y@10 -> 3, __VERIFIER_assert::cond@12 -> 1, __VERIFIER_nondet_int!3@ -> 1, __VERIFIER_assert::cond@10 -> 1, main::c@12 -> 4, main::c@10 -> 3, Integer_*_(25, 2) -> 28, Integer_*_(24, 2) -> 26, Integer_*_(22, 2) -> 25, Integer_*_(21, 2) -> 23, Integer_*_(19, 2) -> 22, Integer_*_(18, 2) -> 20, Integer_*_(16, 2) -> 19, Integer_*_(15, 2) -> 17, Integer_*_(13, 2) -> 16, Integer_*_(12, 2) -> 14, Integer_*_(10, 2) -> 7, Integer_*_(8, 2) -> 11, Integer_*_(6, 2) -> 13, Integer_*_(5, 2) -> 9, Integer_*_(4, 28) -> 170, Integer_*_(4, 25) -> 119, Integer_*_(4, 22) -> 98, Integer_*_(4, 19) -> 80, Integer_*_(4, 16) -> 65, Integer_*_(4, 13) -> 53, Integer_*_(4, 6) -> 45, Integer_*_(4, 4) -> 30, Integer_*_(4, 3) -> 35, Integer_*_(4, 2) -> 3, Integer_*_(4, 1) -> 29, Integer_*_(3, 2) -> 6, Integer_*_(2, 27) -> 169, Integer_*_(2, 24) -> 142, Integer_*_(2, 21) -> 118, Integer_*_(2, 18) -> 97, Integer_*_(2, 15) -> 79, Integer_*_(2, 12) -> 64, Integer_*_(2, 10) -> 44, Integer_*_(2, 8) -> 52, Integer_*_(2, 5) -> 34, Integer_*_(2, 1) -> 29, Integer_*_(1, 2) -> 4}
[__VERIFIER_assert::cond@20: 0, main::y@24: 28, main::x@24: 27, main::c@24: 10, __VERIFIER_assert::cond@18: 1, main::y@22: 25, main::x@22: 24, main::c@22: 9, __VERIFIER_assert::cond@16: 1, main::y@20: 22, main::x@20: 21, main::c@20: 8, __VERIFIER_assert::cond@14: 1, main::y@18: 19, main::x@18: 18, main::c@18: 7, main::y@16: 16, main::x@16: 15, main::c@16: 6, main::y@14: 13, main::x@14: 12, main::c@14: 5, main::az@6: 4, assume_abort_if_not::cond@6: 1, main::k@5: 10, main::a@4: 1, main::__CPAchecker_TMP_1@3: 1, main::x@10: 10, main::x@12: 8, __VERIFIER_nondet_int!4@: 10, main::x@6: 1, main::z@3: 2, main::x@8: 5, main::y@12: 6, assume_abort_if_not::cond@2: 1, assume_abort_if_not::cond@4: 1, __VERIFIER_assert::cond@6: 1, __VERIFIER_assert::cond@4: 1, __VERIFIER_assert::cond@2: 1, __VERIFIER_assert::cond@8: 1, main::y@8: 4, main::__CPAchecker_TMP_0@3: 1, main::y@6: 1, main::__CPAchecker_TMP_2@3: 1, __VERIFIER_nondet_int!2@: 2, main::c@8: 2, main::c@6: 1, main::y@10: 3, __VERIFIER_assert::cond@12: 1, __VERIFIER_nondet_int!3@: 1, __VERIFIER_assert::cond@10: 1, main::c@12: 4, main::c@10: 3, Integer_*_(25, 2): 28, Integer_*_(24, 2): 26, Integer_*_(22, 2): 25, Integer_*_(21, 2): 23, Integer_*_(19, 2): 22, Integer_*_(18, 2): 20, Integer_*_(16, 2): 19, Integer_*_(15, 2): 17, Integer_*_(13, 2): 16, Integer_*_(12, 2): 14, Integer_*_(10, 2): 7, Integer_*_(8, 2): 11, Integer_*_(6, 2): 13, Integer_*_(5, 2): 9, Integer_*_(4, 28): 170, Integer_*_(4, 25): 119, Integer_*_(4, 22): 98, Integer_*_(4, 19): 80, Integer_*_(4, 16): 65, Integer_*_(4, 13): 53, Integer_*_(4, 6): 45, Integer_*_(4, 4): 30, Integer_*_(4, 3): 35, Integer_*_(4, 2): 3, Integer_*_(4, 1): 29, Integer_*_(3, 2): 6, Integer_*_(2, 27): 169, Integer_*_(2, 24): 142, Integer_*_(2, 21): 118, Integer_*_(2, 18): 97, Integer_*_(2, 15): 79, Integer_*_(2, 12): 64, Integer_*_(2, 10): 44, Integer_*_(2, 8): 52, Integer_*_(2, 5): 34, Integer_*_(2, 1): 29, Integer_*_(1, 2): 4]
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)


PredicateCPA statistics
-----------------------
Number of abstractions:            20 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (100%)
  Times precision was empty:       20 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         12
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       91
Avg ABE block size:                                62.50 (sum: 1250, count: 20, min: 34, max: 91)
Number of predicates discovered:          0

Time for post operator:                                0.150s
  Time for path formula creation:                      0.144s
Time for strengthen operator:                          0.010s
Time for prec operator:                                0.011s
  Time for abstraction:                  0.002s (Max:     0.001s, Count: 20)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                               0.003s
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           10
Maximum loop iteration reached:                    11


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     1.08 (sum: 332, count: 308, min: 0, max: 3)
Number of global variables per state:              0.00 (sum: 0, count: 308, min: 0, max: 0)
Number of assumptions:                                   78
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     313
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.010s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                     0.93 (sum: 313, count: 336, min: 0, max: 1) [0 x 23, 1 x 313]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            308
Max size of waitlist:            3
Average size of waitlist:        1
LoopstackSortedWaitlist:                           0.38 (sum: 83, count: 216, min: 0, max: 4)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 216, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.38 (sum: 83, count: 216, min: 0, max: 4)
CallstackSortedWaitlist:                           92.00 (sum: 92, count: 1, min: 92, max: 92)
Number of computed successors:   313
Max successors for one state:    2
Number of times merged:          6
Number of times stopped:         6
Number of times breaked:         0

Total time for CPA algorithm:         0.335s (Max:     0.335s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      0.047s
  Time for transfer relation:         0.249s
  Time for merge operator:            0.008s
  Time for stop operator:             0.006s
  Time for adding to reached set:     0.010s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.337s
Time for final sat check:                            1.696s
Time for error-path creation:                        0.156s
Time for error-path post-processing:                 0.444s

CPAchecker general statistics
-----------------------------
Number of program locations:                       72
Number of CFA edges (per node):                          77 (count: 72, min: 0, max: 3, avg: 1.07)
Number of relevant variables:                      12
Number of functions:                               4
Number of loops (and loop nodes):                         1 (sum: 7, min: 7, max: 7, avg: 7.00)
Size of reached set:             308
  Number of reached locations:   65 (90%)
    Avg states per location:     4
    Max states per location:     20 (at node N1)
  Number of reached functions:   4 (100%)
  Number of partitions:          308
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       20

Time for analysis setup:          2.147s
  Time for loading CPAs:          1.230s
  Time for loading parser:        0.203s
  Time for CFA construction:      0.649s
    Time for parsing file(s):     0.370s
    Time for AST to CFA:          0.145s
    Time for CFA sanity check:    0.001s
    Time for post-processing:     0.095s
    Time for loop structure:      0.006s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.003s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.057s
        Time for collecting variables:                 0.034s
        Time for solving dependencies:                 0.000s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.023s
        Time for exporting data:                       0.000s
Time for Analysis:                2.720s
CPU time for analysis:            5.200s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.868s
Total CPU time for CPAchecker:    9.340s
Time for statistics:              0.039s

Time for Garbage Collector:       0.087s (in 8 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: FALSE. Property violation (unreach-call: reach_error(); called in line 17) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
