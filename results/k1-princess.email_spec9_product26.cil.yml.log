scripts/cpa.sh -heap 13000M -stack 50M -noout -benchmark -bmc -setprop cpa.predicate.useArraysForHeap=false -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -setprop cpa.loopbound.maxLoopIterations=1 -setprop cpa.predicate.encodeFloatAs=INTEGER -setprop cpa.predicate.encodeBitvectorAs=INTEGER -setprop solver.solver=princess -timelimit 900s -stats -spec test/programs/benchmarks/properties/unreach-call.prp -32 test/programs/benchmarks/product-lines/email_spec9_product26.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 13000M.
Running CPAchecker with Java stack of size 50M.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.3.1-svn-45350M / bmc (OpenJDK 64-Bit Server VM 17.0.8.1) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "test/programs/benchmarks/product-lines/email_spec9_product26.cil.c" (CPAchecker.parse, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1065: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1110: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1133: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1399: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1545: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1595: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1747: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1821: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1932: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1973: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2002: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2050: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2097: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2289: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2553: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2645: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2941: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 202: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.getTargets, WARNING)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (PredicateCPA:FormulaManagerView.<init>, WARNING)

Using predicate analysis with Princess 2023-04-07. (PredicateCPA:PredicateCPA.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with unbounded integers for encoding program semantics. (AssumptionStorageCPA:FormulaManagerView.<init>, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Creating formula for program (AbstractBMCAlgorithm.run, INFO)

Starting satisfiability check... (AbstractBMCAlgorithm.boundedModelCheck, INFO)

Starting assertions check... (AbstractBMCAlgorithm.checkBoundingAssertions, INFO)

Terminating because none of the following CPAs' precision can be adjusted any further  LoopBoundCPA (AbstractBMCAlgorithm.adjustConditions, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)


PredicateCPA statistics
-----------------------
Number of abstractions:            0 (0% of all post computations)
Number of strengthen sat checks:   0
Number of coverage checks:         20
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       0
Avg ABE block size:                                0.00 (sum: 0, count: 0, min: 0, max: 0)
Number of predicates discovered:          0

Time for post operator:                                0.324s
  Time for path formula creation:                      0.319s
Time for strengthen operator:                          0.019s
Time for prec operator:                                0.011s
Time for merge operator:                               0.025s
Time for coverage checks:                              0.000s
Total time for SMT solver (w/o itp):     0.000s

Total number of created targets for pointer analysis: 0



KeyValue statistics
-------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

Bounds CPA statistics
---------------------
Bound k:                                           1
Maximum loop iteration reached:                    2


ValueAnalysisCPA statistics
---------------------------
Number of variables per state:                     105.65 (sum: 115158, count: 1090, min: 0, max: 162)
Number of global variables per state:              87.57 (sum: 95446, count: 1090, min: 0, max: 103)
Number of assumptions:                                  562
Number of deterministic assumptions:                      0
Level of Determinism:                              0%

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    1099
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.049s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 1099, count: 1099, min: 1, max: 1) [1 x 1099]
Number of states with assumption transitions:      0

CPA algorithm statistics
------------------------
Number of iterations:            1090
Max size of waitlist:            3
Average size of waitlist:        1
LoopstackSortedWaitlist:                           0.09 (sum: 90, count: 1000, min: 0, max: 90)
ReversePostorderSortedWaitlist:                    0.00 (sum: 0, count: 1005, min: 0, max: 0)
LoopIterationSortedWaitlist:                       0.09 (sum: 85, count: 1000, min: 0, max: 85)
CallstackSortedWaitlist:                           90.00 (sum: 90, count: 1, min: 90, max: 90)
Number of computed successors:   1099
Max successors for one state:    2
Number of times merged:          10
Number of times stopped:         10
Number of times breaked:         0

Total time for CPA algorithm:         0.678s (Max:     0.678s)
  Time for choose from waitlist:      0.006s
  Time for precision adjustment:      0.106s
  Time for transfer relation:         0.485s
  Time for merge operator:            0.034s
  Time for stop operator:             0.012s
  Time for adding to reached set:     0.019s

BMC algorithm statistics
------------------------
Time for BMC formula creation:                       0.680s
Time for final sat check:                            0.212s
Time for bounding assertions check:                  1.795s

CPAchecker general statistics
-----------------------------
Number of program locations:                       1976
Number of CFA edges (per node):                        2236 (count: 1976, min: 0, max: 6, avg: 1.13)
Number of relevant variables:                      398
Number of functions:                               114
Number of loops (and loop nodes):                         4 (sum: 153, min: 15, max: 103, avg: 38.25)
Size of reached set:             1090
  Number of reached locations:   857 (43%)
    Avg states per location:     1
    Max states per location:     6 (at node N1835)
  Number of reached functions:   62 (54%)
  Number of partitions:          1090
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.663s
  Time for loading CPAs:          1.314s
  Time for loading parser:        0.201s
  Time for CFA construction:      1.086s
    Time for parsing file(s):     0.404s
    Time for AST to CFA:          0.398s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.219s
    Time for loop structure:      0.011s
    Time for AST structure:       0.000s
      Time for function pointers resolving:            0.005s
        Function calls via function pointers:             1 (count: 1, min: 1, max: 1, avg: 1.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.138s
        Time for collecting variables:                 0.087s
        Time for solving dependencies:                 0.003s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.048s
        Time for exporting data:                       0.000s
Time for Analysis:                3.009s
CPU time for analysis:            5.130s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.673s
Total CPU time for CPAchecker:   10.340s
Time for statistics:              0.070s

Time for Garbage Collector:       0.077s (in 9 runs)
Garbage Collector(s) used:    G1 Old Generation, G1 Young Generation

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
